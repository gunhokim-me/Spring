<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

<!-- 
	rangerReader , rangerProcessor, rangerWriter 빈생성
 -->
 <bean id="rangerReader" class="kr.or.ddit.batch.ranger.RangerReader"/>
 <bean id="rangerProcessor" class="kr.or.ddit.batch.ranger.RangerProcessor"/>
 <bean id="rangerWirter" class="kr.or.ddit.batch.ranger.RangerWriter"/>
 
 <!-- job 실행정보를 영속성 객체에 저장하지 않고 간단히 실행하고 종료하는데 사용하는 jobRepository -->
 <bean id="jobRepository" class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean"/>
 
 <bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
 	<property name="jobRepository" ref="jobRepository"/>
 </bean>
 
 
 <!-- 우리가 사용하는 jobRepository는 job에 대한 정보를 db에 저장하지 않고 
      in-memory 상에서만 관리하드몰 별도의 트랜잭션이 일어나지는 않지만 
      스프링에서는 동일한 사용방법을 유지하기 위해 dummy 트랜잭션(ResourcelessTransactionManager)를 제공한다 -->
 <bean id="transactionManager" class="org.springframework.batch.support.transaction.ResourcelessTransactionManager"/>
 
 <!-- job 안에 여러개 step를 설정 step는 tasklet을 사용해서 사용-->
 <batch:job id="rangersJob" restartable="true">
 	<batch:step id="rangersStep" allow-start-if-complete="true">
 		<batch:tasklet>
 			<batch:chunk commit-interval="1" reader="rangerReader" processor="rangerProcessor" writer="rangerWirter"></batch:chunk>
 		</batch:tasklet>
 	</batch:step>
 </batch:job>
 
 
 
</beans>
